var L=Object.defineProperty;var D=(C,t,s)=>t in C?L(C,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):C[t]=s;var l=(C,t,s)=>(D(C,typeof t!="symbol"?t+"":t,s),s);import{w as b,F as P,x as I,d as M,y as z,z as x,D as A,H as E}from"./index.ef0f5e24.js";function k(C,t){if(!!b&&!!P)P.saveAs(C,t);else if(b)P.saveAs(C,t);else{var s=require("file-saver");s.saveAs(C,t)}}class W{constructor(t){l(this,"container");l(this,"paintImagesLabel1",{x:[],y:[],z:[]});l(this,"paintImagesLabel2",{x:[],y:[],z:[]});l(this,"paintImagesLabel3",{x:[],y:[],z:[]});l(this,"storedPaintImages",{label1:this.paintImagesLabel1,label2:this.paintImagesLabel2,label3:this.paintImagesLabel3});l(this,"paintImages",{x:[],y:[],z:[]});l(this,"allSlicesArray",[]);l(this,"displaySlices",[]);l(this,"backUpDisplaySlices",[]);l(this,"skipSlicesDic",{});l(this,"axis","z");l(this,"mainAreaContainer",document.createElement("div"));l(this,"showDragNumberDiv",document.createElement("div"));l(this,"drawingCanvas",document.createElement("canvas"));l(this,"displayCanvas",document.createElement("canvas"));l(this,"downloadCanvas",document.createElement("canvas"));l(this,"drawingSphereCanvas",document.createElement("canvas"));l(this,"emptyCanvas",document.createElement("canvas"));l(this,"downloadImage",document.createElement("a"));l(this,"drawingCanvasLayerMaster",document.createElement("canvas"));l(this,"drawingCanvasLayerOne",document.createElement("canvas"));l(this,"drawingCanvasLayerTwo",document.createElement("canvas"));l(this,"drawingCanvasLayerThree",document.createElement("canvas"));l(this,"currentShowingSlice");l(this,"displayCtx");l(this,"drawingCtx");l(this,"emptyCtx");l(this,"drawingSphereCtx");l(this,"drawingLayerMasterCtx");l(this,"drawingLayerOneCtx");l(this,"drawingLayerTwoCtx");l(this,"drawingLayerThreeCtx");l(this,"originCanvas");l(this,"mainPreSlice");l(this,"sceneIn");l(this,"Is_Shift_Pressed",!1);l(this,"Is_Draw",!1);l(this,"sensitiveArray",[]);l(this,"start",()=>{});l(this,"paintedImage");l(this,"previousDrawingImage");l(this,"undoArray",[]);l(this,"initState",!0);l(this,"preTimer");l(this,"eraserUrls",[]);l(this,"pencilUrls",[]);l(this,"nrrd_states",{originWidth:0,originHeight:0,nrrd_x_mm:0,nrrd_y_mm:0,nrrd_z_mm:0,nrrd_x_pixel:0,nrrd_y_pixel:0,nrrd_z_pixel:0,changedWidth:0,changedHeight:0,oldIndex:0,currentIndex:0,maxIndex:0,minIndex:0,RSARatio:0,voxelSpacing:[],spaceOrigin:[],dimensions:[],loadMaskJson:!1,ratios:{x:1,y:1,z:1},sharedPlace:{x:[-1],y:[-1],z:[-1]},latestNotEmptyImg:new Image,contrastNum:0,Max_sensitive:100,readyToUpdate:!0,showContrast:!1,enableCursorChoose:!1,isCursorSelect:!1,cursorPageX:0,cursorPageY:0,sphereOrigin:{x:[0,0,0],y:[0,0,0],z:[0,0,0]},spherePlanB:!0,sphereRadius:10,Mouse_Over_x:0,Mouse_Over_y:0,Mouse_Over:!1,stepClear:1,sizeFoctor:1,clearAllFlag:!1,previousPanelL:-99999,previousPanelT:-99999,switchSliceFlag:!1,labels:["label1","label2","label3"],getMask:(t,s,e,a,i,n)=>{},defaultPaintCursor:I("dot"),drawStartPos:new M(1,1)});l(this,"cursorPage",{x:{cursorPageX:0,cursorPageY:0,index:0,updated:!1},y:{cursorPageX:0,cursorPageY:0,index:0,updated:!1},z:{cursorPageX:0,cursorPageY:0,index:0,updated:!1}});l(this,"gui_states",{mainAreaSize:1,dragSensitivity:75,Eraser:!1,globalAlpha:.7,lineWidth:2,color:"#f50a33",segmentation:!0,fillColor:"#00ff00",brushColor:"#00ff00",brushAndEraserSize:15,cursor:"dot",label:"label1",sphere:!1,clear:()=>{this.clearPaint()},clearAll:()=>{confirm("Are you sure remove annotations on All slice?")===!0&&(this.nrrd_states.clearAllFlag=!0,this.clearPaint(),this.clearStoreImages()),this.nrrd_states.clearAllFlag=!1},undo:()=>{this.undoLastPainting()},downloadCurrentMask:()=>{this.enableDownload()},resetZoom:()=>{this.nrrd_states.sizeFoctor=1,this.resizePaintArea(1),this.resetPaintArea()},subView:!1,subViewScale:1,resetView:()=>{var t;(t=this.sceneIn)==null||t.resetView()},exportMarks:()=>{this.exportData()}});l(this,"dragPrameters",{move:0,y:0,h:0,sensivity:1,handleOnDragMouseUp:t=>{},handleOnDragMouseDown:t=>{},handleOnDragMouseMove:t=>{}});l(this,"drawingPrameters",{handleOnDrawingMouseDown:t=>{},handleOnDrawingMouseMove:t=>{},handleOnPanMouseMove:t=>{},handleOnDrawingMouseUp:t=>{},handleOnDrawingMouseLeave:t=>{},handleOnDrawingBrushCricleMove:t=>{},handleZoomWheel:t=>{},handleSphereWheel:t=>{}});l(this,"configDragMode",()=>{this.container.style.cursor="pointer",this.container.addEventListener("pointerdown",this.dragPrameters.handleOnDragMouseDown,!0),this.container.addEventListener("pointerup",this.dragPrameters.handleOnDragMouseUp,!0)});l(this,"removeDragMode",()=>{this.container.style.cursor="",this.container.removeEventListener("pointerdown",this.dragPrameters.handleOnDragMouseDown,!0),this.container.removeEventListener("pointerup",this.dragPrameters.handleOnDragMouseUp,!0),this.setIsDrawFalse(1e3)});l(this,"drawLine",(t,s,e,a)=>{this.drawingCtx.beginPath(),this.drawingCtx.moveTo(t,s),this.drawingCtx.lineTo(e,a),this.drawingCtx.strokeStyle=this.gui_states.color,this.drawingCtx.stroke()});this.container=t,this.displayCtx=this.displayCanvas.getContext("2d"),this.drawingCtx=this.drawingCanvas.getContext("2d"),this.emptyCtx=this.emptyCanvas.getContext("2d"),this.drawingSphereCtx=this.drawingSphereCanvas.getContext("2d"),this.drawingLayerMasterCtx=this.drawingCanvasLayerMaster.getContext("2d"),this.drawingLayerOneCtx=this.drawingCanvasLayerOne.getContext("2d"),this.drawingLayerTwoCtx=this.drawingCanvasLayerTwo.getContext("2d"),this.drawingLayerThreeCtx=this.drawingCanvasLayerThree.getContext("2d"),this.previousDrawingImage=this.emptyCtx.createImageData(1,1),this.init()}init(){this.showDragNumberDiv=this.createShowSliceNumberDiv(),this.mainAreaContainer.classList.add("copper3D_drawingCanvasContainer"),this.container.appendChild(this.mainAreaContainer),this.autoFocusDiv(this.container),this.downloadImage.href="",this.downloadImage.target="_blank";for(let t=0;t<this.nrrd_states.Max_sensitive;t++)this.sensitiveArray.push((t+1)/20);this.container.addEventListener("keydown",t=>{t.key==="Shift"&&!this.gui_states.sphere&&(this.Is_Shift_Pressed=!0,this.nrrd_states.enableCursorChoose=!1),t.key==="s"&&(this.Is_Draw=!1,this.nrrd_states.enableCursorChoose=!this.nrrd_states.enableCursorChoose)}),this.container.addEventListener("keyup",t=>{t.key==="Shift"&&(this.Is_Shift_Pressed=!1)})}setAllSlices(t){this.allSlicesArray=[...t],this.nrrd_states.nrrd_x_mm=this.allSlicesArray[0].z.canvas.width,this.nrrd_states.nrrd_y_mm=this.allSlicesArray[0].z.canvas.height,this.nrrd_states.nrrd_z_mm=this.allSlicesArray[0].x.canvas.width,this.nrrd_states.nrrd_x_pixel=this.allSlicesArray[0].x.volume.dimensions[0],this.nrrd_states.nrrd_y_pixel=this.allSlicesArray[0].x.volume.dimensions[1],this.nrrd_states.nrrd_z_pixel=this.allSlicesArray[0].x.volume.dimensions[2],this.nrrd_states.voxelSpacing=this.allSlicesArray[0].x.volume.spacing,this.nrrd_states.ratios.x=this.allSlicesArray[0].x.volume.spacing[0],this.nrrd_states.ratios.y=this.allSlicesArray[0].x.volume.spacing[1],this.nrrd_states.ratios.z=this.allSlicesArray[0].x.volume.spacing[2],this.nrrd_states.dimensions=this.allSlicesArray[0].x.volume.dimensions,this.allSlicesArray.forEach((s,e)=>{s.x.contrastOrder=e,s.y.contrastOrder=e,s.z.contrastOrder=e}),this.nrrd_states.spaceOrigin=this.allSlicesArray[0].x.volume.header.space_origin.map(s=>s*1),this.nrrd_states.sharedPlace.x=this.getSharedPlace(this.nrrd_states.dimensions[0],this.nrrd_states.ratios.x),this.nrrd_states.sharedPlace.y=this.getSharedPlace(this.nrrd_states.dimensions[1],this.nrrd_states.ratios.y),this.nrrd_states.sharedPlace.z=this.getSharedPlace(this.nrrd_states.dimensions[2],this.nrrd_states.ratios.z),this.initPaintImages(this.nrrd_states.dimensions),this.setDisplaySlicesBaseOnAxis(),this.afterLoadSlice()}loadingMaskByLabel(t,s,e){let a=this.emptyCtx.createImageData(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel);this.setEmptyCanvasSize();for(let i=0;i<t[s].data.length;i++)a.data[i]=t[s].data[i],e.data[i]+=t[s].data[i];return a}setMasksData(t,s){if(t){if(this.nrrd_states.loadMaskJson=!0,s){let{loadingContainer:a,progress:i}=s;a.style.display="flex",i.innerText="Loading masks data......"}this.setEmptyCanvasSize();const e=t.label1.length;for(let a=0;a<e;a++){let i=this.emptyCtx.createImageData(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel),n,r,h;t.label1[a].data.length>0&&(this.setEmptyCanvasSize(),n=this.loadingMaskByLabel(t.label1,a,i),this.emptyCtx.putImageData(n,0,0),this.storeEachLayerImage(a,"label1")),t.label2[a].data.length>0&&(this.setEmptyCanvasSize(),r=this.loadingMaskByLabel(t.label2,a,i),this.emptyCtx.putImageData(r,0,0),this.storeEachLayerImage(a,"label2")),t.label3[a].data.length>0&&(this.setEmptyCanvasSize(),h=this.loadingMaskByLabel(t.label3,a,i),this.emptyCtx.putImageData(h,0,0),this.storeEachLayerImage(a,"label3")),this.setEmptyCanvasSize(),this.emptyCtx.putImageData(i,0,0),this.storeAllImages(a,"default")}this.nrrd_states.loadMaskJson=!1,this.gui_states.resetZoom(),s&&(s.loadingContainer.style.display="none")}}setEraserUrls(t){this.eraserUrls=t}setPencilIconUrls(t){this.pencilUrls=t,this.nrrd_states.defaultPaintCursor=I("dot",this.pencilUrls),this.drawingCanvas.style.cursor=this.nrrd_states.defaultPaintCursor}getCurrentImageDimension(){return this.nrrd_states.dimensions}getVoxelSpacing(){return this.nrrd_states.voxelSpacing}getSpaceOrigin(){return this.nrrd_states.spaceOrigin}getSharedPlace(t,s){let e=-1,a=[],i=new Set;for(let n=0;n<t;n++){const r=Math.floor(n*s);r===e?(i.add(n-1),i.add(n)):e=r}return i.forEach(n=>{a.push(n)}),a}initPaintImages(t){this.createEmptyPaintImage(t,this.paintImages),this.createEmptyPaintImage(t,this.paintImagesLabel1),this.createEmptyPaintImage(t,this.paintImagesLabel2),this.createEmptyPaintImage(t,this.paintImagesLabel3)}createEmptyPaintImage(t,s){for(let e=0;e<t[0];e++){const a=this.emptyCtx.createImageData(this.nrrd_states.nrrd_z_pixel,this.nrrd_states.nrrd_y_pixel),i={index:e,image:a};s.x.push(i)}for(let e=0;e<t[1];e++){const a=this.emptyCtx.createImageData(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_z_pixel),i={index:e,image:a};s.y.push(i)}for(let e=0;e<t[2];e++){const a=this.emptyCtx.createImageData(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel),i={index:e,image:a};s.z.push(i)}}convertCursorPoint(t,s,e,a,i){const n=this.nrrd_states,r=n.dimensions,h=n.ratios,{nrrd_x_mm:o,nrrd_y_mm:_,nrrd_z_mm:w}=n;let u=0,m=0,y=0,d=0;const g={x:{y:c=>Math.ceil(c/o*r[0]),z:c=>Math.ceil(c/w*r[2])},y:{x:c=>Math.ceil(c/_*r[1]),z:c=>Math.ceil(c/w*r[2])},z:{x:c=>Math.ceil(c/o*r[0]),y:c=>Math.ceil(c/_*r[1])}},p={x:{y:c=>Math.ceil(c/r[0]*o),z:c=>Math.ceil(c/r[0]*o)},y:{x:c=>Math.ceil(c/r[1]*_),z:c=>Math.ceil(c/r[1]*_)},z:{x:c=>Math.ceil(c/r[2]*w),y:c=>Math.ceil(c/r[2]*w)}};if(t!==s){if(t==="z"&&s==="x")u=g[t][s](e),m=u*h[s],y=p[t][s](i),d=a;else if(t==="y"&&s==="x")u=g[t][s](e),m=u*h.x,d=p[t][s](i),y=a;else if(t==="z"&&s==="y")u=g[t][s](a),m=u*h[s],d=p[t][s](i),y=e;else if(t==="x"&&s==="y")u=g[t][s](a),m=u*h[s],y=p[t][s](i),d=e;else if(t==="x"&&s==="z")u=g[t][s](e),m=u*h[s],y=p[t][s](i),d=a;else if(t==="y"&&s==="z")u=g[t][s](a),m=u*h.z,d=p[t][s](i),y=e;else return;return{currentIndex:u,oldIndex:m,convertCursorNumX:y,convertCursorNumY:d}}}setSliceOrientation(t){let s;if(this.nrrd_states.enableCursorChoose||this.gui_states.sphere){if(this.axis==="z"?(this.cursorPage.z.index=this.nrrd_states.currentIndex,this.cursorPage.z.cursorPageX=this.nrrd_states.cursorPageX,this.cursorPage.z.cursorPageY=this.nrrd_states.cursorPageY):this.axis==="x"?(this.cursorPage.x.index=this.nrrd_states.currentIndex,this.cursorPage.x.cursorPageX=this.nrrd_states.cursorPageX,this.cursorPage.x.cursorPageY=this.nrrd_states.cursorPageY):this.axis==="y"&&(this.cursorPage.y.index=this.nrrd_states.currentIndex,this.cursorPage.y.cursorPageX=this.nrrd_states.cursorPageX,this.cursorPage.y.cursorPageY=this.nrrd_states.cursorPageY),t==="z"?this.nrrd_states.isCursorSelect&&!this.cursorPage.z.updated?(this.axis==="x"&&(s=this.convertCursorPoint("x","z",this.cursorPage.x.cursorPageX,this.cursorPage.x.cursorPageY,this.cursorPage.x.index)),this.axis==="y"&&(s=this.convertCursorPoint("y","z",this.cursorPage.y.cursorPageX,this.cursorPage.y.cursorPageY,this.cursorPage.y.index))):(this.nrrd_states.currentIndex=this.cursorPage.z.index,this.nrrd_states.oldIndex=this.cursorPage.z.index*this.nrrd_states.ratios.z,this.nrrd_states.cursorPageX=this.cursorPage.z.cursorPageX,this.nrrd_states.cursorPageY=this.cursorPage.z.cursorPageY):t==="x"?this.nrrd_states.isCursorSelect&&!this.cursorPage.x.updated?(this.axis==="z"&&(s=this.convertCursorPoint("z","x",this.cursorPage.z.cursorPageX,this.cursorPage.z.cursorPageY,this.cursorPage.z.index)),this.axis==="y"&&(s=this.convertCursorPoint("y","x",this.cursorPage.y.cursorPageX,this.cursorPage.y.cursorPageY,this.cursorPage.y.index))):(this.nrrd_states.currentIndex=this.cursorPage.x.index,this.nrrd_states.oldIndex=this.cursorPage.x.index*this.nrrd_states.ratios.x,this.nrrd_states.cursorPageX=this.cursorPage.x.cursorPageX,this.nrrd_states.cursorPageY=this.cursorPage.x.cursorPageY):t==="y"&&(this.nrrd_states.isCursorSelect&&!this.cursorPage.y.updated?(this.axis==="z"&&(s=this.convertCursorPoint("z","y",this.cursorPage.z.cursorPageX,this.cursorPage.z.cursorPageY,this.cursorPage.z.index)),this.axis==="x"&&(s=this.convertCursorPoint("x","y",this.cursorPage.x.cursorPageX,this.cursorPage.x.cursorPageY,this.cursorPage.x.index))):(this.nrrd_states.currentIndex=this.cursorPage.y.index,this.nrrd_states.oldIndex=this.cursorPage.y.index*this.nrrd_states.ratios.y,this.nrrd_states.cursorPageX=this.cursorPage.y.cursorPageX,this.nrrd_states.cursorPageY=this.cursorPage.y.cursorPageY)),s)switch(this.nrrd_states.currentIndex=s.currentIndex,this.nrrd_states.oldIndex=s.oldIndex,this.nrrd_states.cursorPageX=s.convertCursorNumX,this.nrrd_states.cursorPageY=s.convertCursorNumY,s=void 0,t){case"x":this.cursorPage.x.updated=!0;break;case"y":this.cursorPage.y.updated=!0;break;case"z":this.cursorPage.z.updated=!0;break}this.cursorPage.x.updated&&this.cursorPage.y.updated&&this.cursorPage.z.updated&&(this.nrrd_states.isCursorSelect=!1)}this.axis=t,this.resetDisplaySlicesStatus(),this.gui_states.sphere&&!this.nrrd_states.spherePlanB&&this.drawSphere(this.nrrd_states.sphereOrigin[t][0],this.nrrd_states.sphereOrigin[t][1],this.nrrd_states.sphereRadius)}addSkip(t){this.skipSlicesDic[t]=this.backUpDisplaySlices[t],t>=this.displaySlices.length?this.nrrd_states.contrastNum=this.displaySlices.length:this.nrrd_states.contrastNum=t,this.resetDisplaySlicesStatus()}removeSkip(t){this.skipSlicesDic[t]=void 0,this.nrrd_states.contrastNum=0,this.resetDisplaySlicesStatus()}clear(){this.allSlicesArray.length=0,this.displaySlices.length=0,this.undoArray.length=0,this.paintImages.x.length=0,this.paintImages.y.length=0,this.paintImages.z.length=0,this.paintImagesLabel1.x.length=0,this.paintImagesLabel1.y.length=0,this.paintImagesLabel1.z.length=0,this.paintImagesLabel2.x.length=0,this.paintImagesLabel2.y.length=0,this.paintImagesLabel2.z.length=0,this.paintImagesLabel3.x.length=0,this.paintImagesLabel3.y.length=0,this.paintImagesLabel3.z.length=0,this.clearDictionary(this.skipSlicesDic),this.displayCanvas.style.left=this.drawingCanvas.style.left="",this.displayCanvas.style.top=this.drawingCanvas.style.top="",this.backUpDisplaySlices.length=0,this.mainPreSlice=void 0,this.currentShowingSlice=void 0,this.previousDrawingImage=this.emptyCtx.createImageData(1,1),this.initState=!0,this.axis="z",this.nrrd_states.sizeFoctor=1,this.resetLayerCanvas(),this.drawingCanvas.width=this.drawingCanvas.width,this.displayCanvas.width=this.displayCanvas.width}setSliceMoving(t){this.mainPreSlice&&(this.Is_Draw=!0,this.setSyncsliceNum(),this.updateIndex(t),this.setIsDrawFalse(1e3))}setShowInMainArea(t){this.nrrd_states.showContrast=t,this.nrrd_states.contrastNum=0,this.mainPreSlice&&(this.redrawMianPreOnDisplayCanvas(),this.updateShowNumDiv(this.nrrd_states.contrastNum))}setMainAreaSize(t){this.nrrd_states.sizeFoctor+=t,this.nrrd_states.sizeFoctor>=8?this.nrrd_states.sizeFoctor=8:this.nrrd_states.sizeFoctor<=1&&(this.nrrd_states.sizeFoctor=1),this.resizePaintArea(this.nrrd_states.sizeFoctor),this.resetPaintArea(),this.setIsDrawFalse(1e3)}getContainer(){return this.mainAreaContainer}getDrawingCanvas(){return this.drawingCanvas}getNrrdToolsSettings(){return this.nrrd_states}getMaxSliceNum(){return this.nrrd_states.showContrast?[this.nrrd_states.maxIndex,this.nrrd_states.maxIndex*this.displaySlices.length]:[this.nrrd_states.maxIndex]}getCurrentSlicesNumAndContrastNum(){return{currentIndex:this.nrrd_states.currentIndex,contrastIndex:this.nrrd_states.contrastNum}}getCurrentSliceIndex(){return Math.ceil(this.mainPreSlice.index/this.nrrd_states.RSARatio)}getIsShowContrastState(){return this.nrrd_states.showContrast}setIsDrawFalse(t){this.preTimer=setTimeout(()=>{this.Is_Draw=!1,this.preTimer&&(window.clearTimeout(this.preTimer),this.preTimer=void 0)},t)}setDisplaySlicesBaseOnAxis(){this.displaySlices.length=0,this.backUpDisplaySlices.length=0,this.allSlicesArray.forEach(t=>{this.backUpDisplaySlices.push(t[this.axis])}),this.loadDisplaySlicesArray()}loadDisplaySlicesArray(){const t=Object.values(this.skipSlicesDic);t.length===0?this.backUpDisplaySlices.forEach((s,e)=>{this.skipSlicesDic[e]=s,this.displaySlices.push(s)}):t.forEach((s,e)=>{s&&(this.displaySlices.push(this.backUpDisplaySlices[e]),this.skipSlicesDic[e]=this.backUpDisplaySlices[e])})}switchAllSlicesArrayData(t){this.allSlicesArray.length=0,this.allSlicesArray=[...t],this.resetDisplaySlicesStatus()}resetDisplaySlicesStatus(){this.setDisplaySlicesBaseOnAxis(),this.setupConfigs()}setupConfigs(){this.setMainPreSlice(),this.updateMaxIndex(),this.setOriginCanvasAndPre(),this.updateShowNumDiv(this.nrrd_states.contrastNum),this.repraintCurrentContrastSlice(),this.resizePaintArea(this.nrrd_states.sizeFoctor),this.resetPaintArea()}setMainPreSlice(){this.mainPreSlice=this.displaySlices[0],this.mainPreSlice&&(this.nrrd_states.RSARatio=this.mainPreSlice.RSARatio)}setOriginCanvasAndPre(){this.mainPreSlice&&(this.nrrd_states.oldIndex>this.nrrd_states.maxIndex&&(this.nrrd_states.oldIndex=this.nrrd_states.maxIndex),this.initState?(this.nrrd_states.oldIndex=this.mainPreSlice.initIndex*this.nrrd_states.RSARatio,this.nrrd_states.currentIndex=this.mainPreSlice.initIndex):this.mainPreSlice.index=this.nrrd_states.oldIndex,this.originCanvas=this.mainPreSlice.canvas,this.updateOriginAndChangedWH())}afterLoadSlice(){this.setMainPreSlice(),this.setOriginCanvasAndPre(),this.currentShowingSlice=this.mainPreSlice,this.nrrd_states.oldIndex=this.mainPreSlice.initIndex*this.nrrd_states.RSARatio,this.nrrd_states.currentIndex=this.mainPreSlice.initIndex,this.undoArray=[{sliceIndex:this.nrrd_states.currentIndex,layers:{label1:[],label2:[],label3:[]}}],this.updateMaxIndex(),this.updateShowNumDiv(this.nrrd_states.contrastNum),this.initState=!1}updateMaxIndex(){this.mainPreSlice&&(this.nrrd_states.maxIndex=this.mainPreSlice.MaxIndex)}updateCurrentContrastSlice(){return this.currentShowingSlice=this.displaySlices[this.nrrd_states.contrastNum],this.currentShowingSlice}createShowSliceNumberDiv(){const t=document.createElement("div");return t.className="copper3d_sliceNumber",t.style.position="absolute",t.style.zIndex="100",t.style.top="20px",t.style.left="100px",t}updateOriginAndChangedWH(){this.nrrd_states.originWidth=this.originCanvas.width,this.nrrd_states.originHeight=this.originCanvas.height,this.nrrd_states.changedWidth=this.nrrd_states.originWidth*Number(this.gui_states.mainAreaSize),this.nrrd_states.changedHeight=this.nrrd_states.originWidth*Number(this.gui_states.mainAreaSize),this.resizePaintArea(1),this.resetPaintArea()}initAllCanvas(){this.displayCanvas.style.position="absolute",this.displayCanvas.style.zIndex="9",this.displayCanvas.width=this.nrrd_states.changedWidth,this.displayCanvas.height=this.nrrd_states.changedHeight,this.drawingCanvas.style.zIndex="10",this.drawingCanvas.style.position="absolute",this.drawingCanvas.width=this.nrrd_states.changedWidth,this.drawingCanvas.height=this.nrrd_states.changedHeight,this.drawingCanvas.style.cursor=this.nrrd_states.defaultPaintCursor,this.drawingCanvas.oncontextmenu=()=>!1,this.drawingCanvasLayerMaster.width=this.drawingCanvasLayerOne.width=this.drawingCanvasLayerTwo.width=this.drawingCanvasLayerThree.width=this.nrrd_states.changedWidth,this.drawingCanvasLayerMaster.height=this.drawingCanvasLayerOne.height=this.drawingCanvasLayerTwo.height=this.drawingCanvasLayerThree.height=this.nrrd_states.changedHeight,this.mainAreaContainer.style.width=this.nrrd_states.originWidth*8+"px",this.mainAreaContainer.style.height=this.nrrd_states.originHeight*8+"px",this.mainAreaContainer.appendChild(this.displayCanvas),this.mainAreaContainer.appendChild(this.drawingCanvas)}autoFocusDiv(t){t.tabIndex=10,t.addEventListener("mouseover",()=>{t.focus()}),t.style.outline="none"}setSyncsliceNum(){this.displaySlices.forEach((t,s)=>{s!==0&&(t.index=this.mainPreSlice.index)})}repraintCurrentContrastSlice(){this.setSyncsliceNum(),this.displaySlices.forEach((t,s)=>{t.repaint.call(t)})}repraintAllContrastSlices(){this.displaySlices.forEach((t,s)=>{t.volume.repaintAllSlices()})}updateShowNumDiv(t){this.mainPreSlice&&(this.nrrd_states.currentIndex>this.nrrd_states.maxIndex&&(this.nrrd_states.currentIndex=this.nrrd_states.maxIndex),this.nrrd_states.showContrast?this.showDragNumberDiv.innerHTML=`ContrastNum: ${t}/${this.displaySlices.length-1} SliceNum: ${this.nrrd_states.currentIndex}/${this.nrrd_states.maxIndex}`:this.showDragNumberDiv.innerHTML=`SliceNum: ${this.nrrd_states.currentIndex}/${this.nrrd_states.maxIndex}`)}appendLoadingbar(t){this.mainAreaContainer.appendChild(t)}drag(t){this.dragPrameters.h=this.container.offsetHeight,this.sensitiveArray.reverse(),t!=null&&t.showNumber&&this.container.appendChild(this.showDragNumberDiv),this.dragPrameters.handleOnDragMouseDown=s=>{this.drawingCanvas.removeEventListener("wheel",this.drawingPrameters.handleZoomWheel),s.button===0&&(this.dragPrameters.y=s.offsetY/this.dragPrameters.h,this.container.addEventListener("pointermove",this.dragPrameters.handleOnDragMouseMove,!1),this.dragPrameters.sensivity=this.sensitiveArray[this.gui_states.dragSensitivity-1])},this.dragPrameters.handleOnDragMouseMove=z(s=>{this.dragPrameters.y-s.offsetY/this.dragPrameters.h>=0?this.dragPrameters.move=-Math.ceil((this.dragPrameters.y-s.offsetY/this.dragPrameters.h)*10/this.dragPrameters.sensivity):this.dragPrameters.move=-Math.floor((this.dragPrameters.y-s.offsetY/this.dragPrameters.h)*10/this.dragPrameters.sensivity),this.updateIndex(this.dragPrameters.move),t!=null&&t.getSliceNum&&t.getSliceNum(this.nrrd_states.currentIndex,this.nrrd_states.contrastNum),this.dragPrameters.y=s.offsetY/this.dragPrameters.h},this.dragPrameters.sensivity*200),this.dragPrameters.handleOnDragMouseUp=s=>{this.drawingCanvas.addEventListener("wheel",this.drawingPrameters.handleZoomWheel),this.setSyncsliceNum(),this.container.removeEventListener("pointermove",this.dragPrameters.handleOnDragMouseMove,!1)},this.configDragMode(),this.container.addEventListener("keydown",s=>{s.key==="Shift"&&this.removeDragMode()}),this.container.addEventListener("keyup",s=>{s.key==="Shift"&&!this.gui_states.sphere&&this.configDragMode()})}updateIndex(t){let s=0,e=0;this.nrrd_states.showContrast?(e=t%this.displaySlices.length,this.nrrd_states.contrastNum+=e,t>0?this.nrrd_states.currentIndex<=this.nrrd_states.maxIndex?(s=Math.floor(t/this.displaySlices.length),this.nrrd_states.contrastNum>this.displaySlices.length-1&&(s+=1,this.nrrd_states.contrastNum-=this.displaySlices.length)):s=0:(s=Math.ceil(t/this.displaySlices.length),this.nrrd_states.contrastNum<0&&(this.nrrd_states.contrastNum+=this.displaySlices.length,s-=1))):s=t;let a=this.nrrd_states.currentIndex+s;if(a!=this.nrrd_states.currentIndex||this.nrrd_states.showContrast){if(a>this.nrrd_states.maxIndex)a=this.nrrd_states.maxIndex,this.nrrd_states.contrastNum=this.displaySlices.length-1;else if(a<this.nrrd_states.minIndex)a=this.nrrd_states.minIndex,this.nrrd_states.contrastNum=0;else{this.mainPreSlice.index=a*this.nrrd_states.RSARatio,this.setSyncsliceNum(),a!=this.nrrd_states.currentIndex&&(this.nrrd_states.switchSliceFlag=!0,this.drawingCanvasLayerMaster.width=this.drawingCanvasLayerMaster.width,this.drawingCanvasLayerOne.width=this.drawingCanvasLayerOne.width,this.drawingCanvasLayerTwo.width=this.drawingCanvasLayerTwo.width,this.drawingCanvasLayerThree.width=this.drawingCanvasLayerThree.width),this.displayCanvas.width=this.displayCanvas.width,this.nrrd_states.changedWidth===0&&(this.nrrd_states.changedWidth=this.nrrd_states.originWidth,this.nrrd_states.changedHeight=this.nrrd_states.originHeight);let i=this.updateCurrentContrastSlice();i.repaint.call(i),this.nrrd_states.currentIndex=a,this.drawDragSlice(i.canvas)}this.nrrd_states.oldIndex=a*this.nrrd_states.RSARatio,this.updateShowNumDiv(this.nrrd_states.contrastNum)}}drawDragSlice(t){this.displayCtx.save(),this.flipDisplayImageByAxis(),this.displayCtx.drawImage(t,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight),this.displayCtx.restore(),(this.paintImages.x.length>0||this.paintImages.y.length>0||this.paintImages.z.length>0)&&this.nrrd_states.switchSliceFlag&&(this.paintedImage=this.filterDrawedImage(this.axis,this.nrrd_states.currentIndex,this.paintImages),this.drawMaskToLabelCtx(this.paintImages,this.drawingLayerMasterCtx),this.drawMaskToLabelCtx(this.paintImagesLabel1,this.drawingLayerOneCtx),this.drawMaskToLabelCtx(this.paintImagesLabel2,this.drawingLayerTwoCtx),this.drawMaskToLabelCtx(this.paintImagesLabel3,this.drawingLayerThreeCtx),this.nrrd_states.switchSliceFlag=!1)}drawMaskToLabelCtx(t,s){const e=this.filterDrawedImage(this.axis,this.nrrd_states.currentIndex,t);e!=null&&e.image&&(this.setEmptyCanvasSize(),this.emptyCtx.putImageData(e.image,0,0),s.drawImage(this.emptyCanvas,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight))}draw(t,s,e){let a,i;e&&(this.nrrd_states.getMask=e==null?void 0:e.getMaskData),this.sceneIn=t,t.controls.enabled=!1,this.gui_states.subView===!1&&t.subDiv&&(t.subDiv.style.display="none"),a=s.addFolder("Mode Parameters"),t.subDiv&&(i=s.addFolder("Sub View"),i.add(this.gui_states,"resetView"),i.add(this.gui_states,"subView").onChange(n=>{n?(t.controls.enabled=!0,t.subDiv&&(t.subDiv.style.display="block")):(t.subDiv&&(t.subDiv.style.display="none"),t.controls.enabled=!1)}),i.add(this.gui_states,"subViewScale").min(.25).max(2).step(.01).onFinishChange(n=>{t.subDiv&&(t.subDiv.style.width=200*n+"px"),t.subDiv&&(t.subDiv.style.height=200*n+"px")})),this.paintOnCanvas(a)}paintOnCanvas(t){var w,u,m,y;let s=!1,e=!1,a=0,i=0,n=this.mainPreSlice.index,r=!1,h=[];const o=this.useEraser();this.updateOriginAndChangedWH(),this.initAllCanvas(),this.configGui(t),(w=this.displayCtx)==null||w.save(),this.flipDisplayImageByAxis(),(u=this.displayCtx)==null||u.drawImage(this.originCanvas,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight),(m=this.displayCtx)==null||m.restore(),this.previousDrawingImage=this.drawingCtx.getImageData(0,0,this.drawingCanvas.width,this.drawingCanvas.height),this.drawingPrameters.handleZoomWheel=this.configMouseZoomWheel((y=this.sceneIn)==null?void 0:y.controls),this.drawingCanvas.addEventListener("wheel",this.drawingPrameters.handleZoomWheel,{passive:!1}),this.drawingPrameters.handleSphereWheel=this.configMouseSphereWheel(),this.drawingPrameters.handleOnPanMouseMove=d=>{this.drawingCanvas.style.cursor="grabbing",this.nrrd_states.previousPanelL=d.clientX-a,this.nrrd_states.previousPanelT=d.clientY-i,this.displayCanvas.style.left=this.drawingCanvas.style.left=this.nrrd_states.previousPanelL+"px",this.displayCanvas.style.top=this.drawingCanvas.style.top=this.nrrd_states.previousPanelT+"px"},this.drawingPrameters.handleOnDrawingBrushCricleMove=d=>{d.preventDefault(),this.nrrd_states.Mouse_Over_x=d.offsetX,this.nrrd_states.Mouse_Over_y=d.offsetY,this.nrrd_states.Mouse_Over_x===void 0&&(this.nrrd_states.Mouse_Over_x=d.clientX,this.nrrd_states.Mouse_Over_y=d.clientY),d.type==="mouseout"?(this.nrrd_states.Mouse_Over=!1,this.drawingCanvas.removeEventListener("mousemove",this.drawingPrameters.handleOnDrawingBrushCricleMove)):d.type==="mouseover"&&(this.nrrd_states.Mouse_Over=!0,this.drawingCanvas.addEventListener("mousemove",this.drawingPrameters.handleOnDrawingBrushCricleMove))},this.drawingPrameters.handleOnDrawingMouseMove=d=>{this.Is_Draw=!0,r&&(this.gui_states.Eraser?(this.nrrd_states.stepClear=1,o(d.offsetX,d.offsetY,this.gui_states.brushAndEraserSize)):(h.push({x:d.offsetX,y:d.offsetY}),this.paintOnCanvasLayer(d.offsetX,d.offsetY)))},this.drawingPrameters.handleOnDrawingMouseDown=d=>{if(s||e){this.drawingCanvas.removeEventListener("pointerup",this.drawingPrameters.handleOnDrawingMouseUp),this.drawingLayerMasterCtx.closePath();return}if(n!==this.mainPreSlice.index&&(this.previousDrawingImage=this.emptyCtx.createImageData(1,1),n=this.mainPreSlice.index),this.drawingCanvas.removeEventListener("wheel",this.drawingPrameters.handleZoomWheel),d.button===0){if(this.Is_Shift_Pressed)s=!0,h=[],r=!0,this.Is_Draw=!0,this.gui_states.Eraser?this.eraserUrls.length>0?this.drawingCanvas.style.cursor=x(this.gui_states.brushAndEraserSize,this.eraserUrls):this.drawingCanvas.style.cursor=x(this.gui_states.brushAndEraserSize):this.drawingCanvas.style.cursor=this.nrrd_states.defaultPaintCursor,this.nrrd_states.drawStartPos.set(d.offsetX,d.offsetY),this.drawingCanvas.addEventListener("pointerup",this.drawingPrameters.handleOnDrawingMouseUp),this.drawingCanvas.addEventListener("pointermove",this.drawingPrameters.handleOnDrawingMouseMove);else if(this.nrrd_states.enableCursorChoose)this.nrrd_states.cursorPageX=d.offsetX/this.nrrd_states.sizeFoctor,this.nrrd_states.cursorPageY=d.offsetY/this.nrrd_states.sizeFoctor,this.enableCrosshair();else if(this.gui_states.sphere){let g=d.offsetX,p=d.offsetY;this.nrrd_states.sphereOrigin[this.axis]=[g,p,this.nrrd_states.currentIndex],this.setUpSphereOrigins(g,p),this.nrrd_states.cursorPageX=g,this.nrrd_states.cursorPageY=p,this.enableCrosshair(),this.drawSphere(g,p,this.nrrd_states.sphereRadius),this.drawingCanvas.addEventListener("wheel",this.drawingPrameters.handleSphereWheel,!0),this.drawingCanvas.addEventListener("pointerup",this.drawingPrameters.handleOnDrawingMouseUp)}}else if(d.button===2){e=!0;let g=this.drawingCanvas.offsetLeft,p=this.drawingCanvas.offsetTop;a=d.clientX-g,i=d.clientY-p,this.drawingCanvas.style.cursor="grab",this.drawingCanvas.addEventListener("pointerup",this.drawingPrameters.handleOnDrawingMouseUp),this.drawingCanvas.addEventListener("pointermove",this.drawingPrameters.handleOnPanMouseMove)}else return},this.drawingCanvas.addEventListener("pointerdown",this.drawingPrameters.handleOnDrawingMouseDown,!0);const _=(d,g="default")=>{var f;let p;switch(g){case"label1":p=this.paintImagesLabel1;break;case"label2":p=this.paintImagesLabel2;break;case"label3":p=this.paintImagesLabel3;break;default:p=this.paintImages;break}const c=(f=this.filterDrawedImage(this.axis,this.nrrd_states.currentIndex,p))==null?void 0:f.image;this.emptyCanvas.width=this.emptyCanvas.width,c&&g=="default"&&(this.previousDrawingImage=c),this.emptyCtx.putImageData(c,0,0),d.drawImage(this.emptyCanvas,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)};this.drawingPrameters.handleOnDrawingMouseUp=d=>{if(d.button===0){if(this.Is_Shift_Pressed||r){s=!1;let{ctx:g,canvas:p}=this.setCurrentLayer();if(g.closePath(),this.drawingCanvas.removeEventListener("pointermove",this.drawingPrameters.handleOnDrawingMouseMove),!this.gui_states.Eraser&&this.gui_states.segmentation){this.drawingCanvasLayerMaster.width=this.drawingCanvasLayerMaster.width,p.width=p.width,_(this.drawingLayerMasterCtx),_(g,this.gui_states.label),g.beginPath(),g.moveTo(h[0].x,h[0].y);for(let v=1;v<h.length;v++)g.lineTo(h[v].x,h[v].y);g.closePath(),g.lineWidth=1,g.fillStyle=this.gui_states.fillColor,g.fill(),this.drawingLayerMasterCtx.drawImage(p,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)}if(this.previousDrawingImage=this.drawingLayerMasterCtx.getImageData(0,0,this.drawingCanvasLayerMaster.width,this.drawingCanvasLayerMaster.height),this.storeAllImages(this.nrrd_states.currentIndex,this.gui_states.label),this.gui_states.Eraser){const v=this.getRestLabel();this.storeEachLayerImage(this.nrrd_states.currentIndex,v[0]),this.storeEachLayerImage(this.nrrd_states.currentIndex,v[1])}r=!1;const c=this.getCurrentUndo(),f=this.drawingCanvasLayerMaster.toDataURL(),S=new Image;if(S.src=f,c.length>0)c[0].layers[this.gui_states.label].push(S);else{const v={sliceIndex:this.nrrd_states.currentIndex,layers:{label1:[],label2:[],label3:[]}};v.layers[this.gui_states.label].push(S),this.undoArray.push(v)}this.drawingCanvas.addEventListener("wheel",this.drawingPrameters.handleZoomWheel,{passive:!1})}else if(this.gui_states.sphere&&!this.nrrd_states.enableCursorChoose){if(this.nrrd_states.spherePlanB){this.clearStoreImages();for(let g=0;g<this.nrrd_states.sphereRadius;g++)this.drawSphereOnEachViews(g,"x"),this.drawSphereOnEachViews(g,"y"),this.drawSphereOnEachViews(g,"z")}this.drawingCanvas.removeEventListener("wheel",this.drawingPrameters.handleSphereWheel,!0)}}else if(d.button===2)e=!1,this.drawingCanvas.style.cursor="grab",this.drawingCanvas.removeEventListener("pointermove",this.drawingPrameters.handleOnPanMouseMove);else return;this.gui_states.segmentation||this.setIsDrawFalse(100)},this.drawingCanvas.addEventListener("pointerleave",d=>{r=!1,s&&(s=!1,this.drawingLayerMasterCtx.closePath(),this.drawingCanvas.removeEventListener("pointermove",this.drawingPrameters.handleOnDrawingMouseMove),this.drawingCanvas.removeEventListener("wheel",this.drawingPrameters.handleSphereWheel,!0)),e&&(e=!1,this.drawingCanvas.style.cursor="grab",this.drawingCanvas.removeEventListener("pointermove",this.drawingPrameters.handleOnPanMouseMove)),this.setIsDrawFalse(100),this.gui_states.segmentation&&this.setIsDrawFalse(1e3)}),this.start=()=>{if(this.nrrd_states.readyToUpdate){if(this.drawingCtx.clearRect(0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight),this.drawingCtx.globalAlpha=this.gui_states.globalAlpha,this.Is_Draw)this.drawingLayerMasterCtx.lineCap="round",this.drawingLayerMasterCtx.globalAlpha=1,this.drawingLayerOneCtx.lineCap="round",this.drawingLayerOneCtx.globalAlpha=1,this.drawingLayerTwoCtx.lineCap="round",this.drawingLayerTwoCtx.globalAlpha=1,this.drawingLayerThreeCtx.lineCap="round",this.drawingLayerThreeCtx.globalAlpha=1;else if(this.Is_Shift_Pressed&&!this.gui_states.segmentation&&!this.gui_states.Eraser&&this.nrrd_states.Mouse_Over&&(this.drawingCtx.clearRect(0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight),this.drawingCtx.fillStyle=this.gui_states.brushColor,this.drawingCtx.beginPath(),this.drawingCtx.arc(this.nrrd_states.Mouse_Over_x,this.nrrd_states.Mouse_Over_y,this.gui_states.brushAndEraserSize/2+1,0,Math.PI*2),this.drawingCtx.strokeStyle=this.gui_states.brushColor,this.drawingCtx.stroke()),this.nrrd_states.enableCursorChoose){this.drawingCtx.clearRect(0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight);const d=this.nrrd_states.cursorPageX*this.nrrd_states.sizeFoctor,g=this.nrrd_states.cursorPageY*this.nrrd_states.sizeFoctor;this.drawLine(d,0,d,this.drawingCanvas.height),this.drawLine(0,g,this.drawingCanvas.width,g)}this.drawingCtx.drawImage(this.drawingCanvasLayerMaster,0,0)}else this.redrawDisplayCanvas()},document.addEventListener("keydown",d=>{(d.ctrlKey||d.metaKey)&&d.code==="KeyZ"&&this.undoLastPainting()})}enableCrosshair(){switch(this.nrrd_states.isCursorSelect=!0,this.axis){case"x":this.cursorPage.x.updated=!0,this.cursorPage.y.updated=!1,this.cursorPage.z.updated=!1;break;case"y":this.cursorPage.x.updated=!1,this.cursorPage.y.updated=!0,this.cursorPage.z.updated=!1;break;case"z":this.cursorPage.x.updated=!1,this.cursorPage.y.updated=!1,this.cursorPage.z.updated=!0;break}}setUpSphereOrigins(t,s){const e=(r,h)=>{const o=this.convertCursorPoint(r,h,t,s,this.nrrd_states.currentIndex);return{convertCursorNumX:o==null?void 0:o.convertCursorNumX,convertCursorNumY:o==null?void 0:o.convertCursorNumY,currentIndex:o==null?void 0:o.currentIndex}},a={x:{axisTo1:"y",axisTo2:"z"},y:{axisTo1:"z",axisTo2:"x"},z:{axisTo1:"x",axisTo2:"y"}},{axisTo1:i,axisTo2:n}=a[this.axis];this.nrrd_states.sphereOrigin[i]=[e(this.axis,i).convertCursorNumX,e(this.axis,i).convertCursorNumY,e(this.axis,i).currentIndex],this.nrrd_states.sphereOrigin[n]=[e(this.axis,n).convertCursorNumX,e(this.axis,n).convertCursorNumY,e(this.axis,n).currentIndex]}drawSphereOnEachViews(t,s){this.setSphereCanvasSize(s);const e=this.nrrd_states.sphereOrigin[s][0],a=this.nrrd_states.sphereOrigin[s][1],i=this.nrrd_states.sphereOrigin[s][2],n=i-t,r=i+t,h=this.drawingSphereCtx,o=this.drawingSphereCanvas;n===r?(this.drawSphereCore(h,e,a,this.nrrd_states.sphereRadius),this.storeSphereImages(n,s)):(this.drawSphereCore(h,e,a,this.nrrd_states.sphereRadius-t),this.drawImageOnEmptyImage(o),this.storeSphereImages(n,s),this.storeSphereImages(r,s)),h.clearRect(0,0,o.width,o.height)}drawSphereCore(t,s,e,a){t.beginPath(),t.arc(s,e,a*this.nrrd_states.sizeFoctor,0,2*Math.PI),t.fillStyle=this.gui_states.fillColor,t.fill(),t.closePath()}drawSphere(t,s,e){this.drawingSphereCanvas.width=this.drawingCanvasLayerMaster.width,this.drawingSphereCanvas.height=this.drawingCanvasLayerMaster.height;const a=this.drawingSphereCanvas,i=this.drawingSphereCtx;this.drawingLayerMasterCtx.clearRect(0,0,a.width,a.height),this.drawSphereCore(i,t,s,e),this.drawingLayerMasterCtx.drawImage(a,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)}undoLastPainting(){let{ctx:t,canvas:s}=this.setCurrentLayer();this.Is_Draw=!0,this.drawingCanvasLayerMaster.width=this.drawingCanvasLayerMaster.width,s.width=s.width,this.mainPreSlice.repaint.call(this.mainPreSlice);const e=this.getCurrentUndo();if(e.length>0){const a=e[0],i=a.layers[this.gui_states.label],n=i.length;if(i.pop(),n>0){const r=i[n-1];r&&t.drawImage(r,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)}if(a.layers.label1.length>0){const r=a.layers.label1[a.layers.label1.length-1];this.drawingLayerMasterCtx.drawImage(r,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)}if(a.layers.label2.length>0){const r=a.layers.label2[a.layers.label2.length-1];this.drawingLayerMasterCtx.drawImage(r,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)}if(a.layers.label3.length>0){const r=a.layers.label3[a.layers.label3.length-1];this.drawingLayerMasterCtx.drawImage(r,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight)}this.previousDrawingImage=this.drawingLayerMasterCtx.getImageData(0,0,this.drawingCanvasLayerMaster.width,this.drawingCanvasLayerMaster.height),this.storeAllImages(this.nrrd_states.currentIndex,this.gui_states.label),this.setIsDrawFalse(1e3)}}getCurrentUndo(){return this.undoArray.filter(t=>t.sliceIndex===this.nrrd_states.currentIndex)}configMouseSphereWheel(){return s=>{s.preventDefault(),s.deltaY<0?this.nrrd_states.sphereRadius+=1:this.nrrd_states.sphereRadius-=1,this.nrrd_states.sphereRadius=Math.max(1,Math.min(this.nrrd_states.sphereRadius,50)),console.log(this.nrrd_states.sphereOrigin[this.axis][0],this.nrrd_states.sphereOrigin[this.axis][1]);const e=this.nrrd_states.sphereOrigin[this.axis][0],a=this.nrrd_states.sphereOrigin[this.axis][1];this.drawSphere(e,a,this.nrrd_states.sphereRadius)}}configMouseZoomWheel(t){let s=1;return a=>{if(this.Is_Shift_Pressed)return;a.preventDefault();const i=a.detail?a.detail>0:a.wheelDelta<0;this.Is_Draw=!0;const n=(a.clientX-this.mainAreaContainer.offsetLeft-this.drawingCanvas.offsetLeft)/this.drawingCanvas.offsetWidth,r=(a.clientY-this.mainAreaContainer.offsetTop-this.drawingCanvas.offsetTop)/this.drawingCanvas.offsetHeight,h=i?1-.1:1+.1,o=this.drawingCanvas.offsetWidth*h,_=this.drawingCanvas.offsetHeight*h,w=Math.round(a.clientX-this.mainAreaContainer.offsetLeft-o*n),u=Math.round(a.clientY-this.mainAreaContainer.offsetTop-_*r);s=o/this.nrrd_states.originWidth,s>8?s=8:s<1?s=1:(this.resizePaintArea(s),this.resetPaintArea(w,u),t&&(t.enabled=!1),this.setIsDrawFalse(1e3)),this.nrrd_states.sizeFoctor=s}}useEraser(){const t=(s,e,a)=>{var i=a-this.nrrd_states.stepClear,n=Math.sqrt(a*a-i*i),r=s-i,h=e-n,o=2*i,_=2*n;this.nrrd_states.stepClear<=a&&(this.drawingLayerMasterCtx.clearRect(r,h,o,_),this.drawingLayerOneCtx.clearRect(r,h,o,_),this.drawingLayerTwoCtx.clearRect(r,h,o,_),this.drawingLayerThreeCtx.clearRect(r,h,o,_),this.nrrd_states.stepClear+=1,t(s,e,a))};return t}clearPaint(){this.Is_Draw=!0,this.resetLayerCanvas(),this.originCanvas.width=this.originCanvas.width,this.mainPreSlice.repaint.call(this.mainPreSlice),this.previousDrawingImage=this.emptyCtx.createImageData(1,1),this.storeAllImages(this.nrrd_states.currentIndex,this.gui_states.label);const t=this.getRestLabel();this.storeEachLayerImage(this.nrrd_states.currentIndex,t[0]),this.storeEachLayerImage(this.nrrd_states.currentIndex,t[1]),this.setIsDrawFalse(1e3)}getRestLabel(){return this.nrrd_states.labels.filter(e=>e!==this.gui_states.label)}clearStoreImages(){this.paintImages.x.length=0,this.paintImages.y.length=0,this.paintImages.z.length=0,this.paintImagesLabel1.x.length=0,this.paintImagesLabel1.y.length=0,this.paintImagesLabel1.z.length=0,this.paintImagesLabel2.x.length=0,this.paintImagesLabel2.y.length=0,this.paintImagesLabel2.z.length=0,this.paintImagesLabel3.x.length=0,this.paintImagesLabel3.y.length=0,this.paintImagesLabel3.z.length=0,this.initPaintImages(this.nrrd_states.dimensions)}enableDownload(){this.downloadImage.download=`slice_${this.axis}_#${this.nrrd_states.currentIndex}`;const t=this.downloadCanvas.getContext("2d");this.downloadCanvas.width=this.nrrd_states.originWidth,this.downloadCanvas.height=this.nrrd_states.originHeight,t.drawImage(this.drawingCanvas,0,0,this.nrrd_states.originWidth,this.nrrd_states.originHeight),this.downloadImage.href=this.downloadCanvas.toDataURL(),this.downloadImage.click()}paintOnCanvasLayer(t,s){let{ctx:e,canvas:a}=this.setCurrentLayer();this.drawLinesOnLayer(e,t,s),this.drawLinesOnLayer(this.drawingLayerMasterCtx,t,s),this.nrrd_states.drawStartPos.set(t,s),this.mainPreSlice.mesh.material.map.needsUpdate=!0}drawLinesOnLayer(t,s,e){t.beginPath(),t.moveTo(this.nrrd_states.drawStartPos.x,this.nrrd_states.drawStartPos.y),this.gui_states.segmentation?(t.strokeStyle=this.gui_states.color,t.lineWidth=this.gui_states.lineWidth):(t.strokeStyle=this.gui_states.brushColor,t.lineWidth=this.gui_states.brushAndEraserSize),t.lineTo(s,e),t.stroke(),t.closePath()}setCurrentLayer(){let t,s;switch(this.gui_states.label){case"label1":t=this.drawingLayerOneCtx,s=this.drawingCanvasLayerOne;break;case"label2":t=this.drawingLayerTwoCtx,s=this.drawingCanvasLayerTwo;break;case"label3":t=this.drawingLayerThreeCtx,s=this.drawingCanvasLayerThree;break;default:t=this.drawingLayerOneCtx,s=this.drawingCanvasLayerOne;break}return{ctx:t,canvas:s}}updateSlicesContrast(t,s){switch(s){case"lowerThreshold":this.displaySlices.forEach((e,a)=>{e.volume.lowerThreshold=t});break;case"upperThreshold":this.displaySlices.forEach((e,a)=>{e.volume.upperThreshold=t});break;case"windowLow":this.displaySlices.forEach((e,a)=>{e.volume.windowLow=t});break;case"windowHigh":this.displaySlices.forEach((e,a)=>{e.volume.windowHigh=t});break}this.repraintCurrentContrastSlice()}resetPaintArea(t,s){t&&s?(this.displayCanvas.style.left=this.drawingCanvas.style.left=t+"px",this.displayCanvas.style.top=this.drawingCanvas.style.top=s+"px"):(this.mainAreaContainer.style.justifyContent="center",this.mainAreaContainer.style.alignItems="center")}resetLayerCanvas(){this.drawingCanvasLayerMaster.width=this.drawingCanvasLayerMaster.width,this.drawingCanvasLayerOne.width=this.drawingCanvasLayerOne.width,this.drawingCanvasLayerTwo.width=this.drawingCanvasLayerTwo.width,this.drawingCanvasLayerThree.width=this.drawingCanvasLayerThree.width}redrawDisplayCanvas(){var t,s,e;this.updateCurrentContrastSlice(),this.displayCanvas.width=this.displayCanvas.width,this.displayCanvas.height=this.displayCanvas.height,this.originCanvas.width=this.originCanvas.width,this.currentShowingSlice&&(this.currentShowingSlice.repaint.call(this.currentShowingSlice),(t=this.displayCtx)==null||t.save(),this.flipDisplayImageByAxis(),(s=this.displayCtx)==null||s.drawImage(this.currentShowingSlice.canvas,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight),(e=this.displayCtx)==null||e.restore())}redrawMianPreOnDisplayCanvas(){var t;this.displayCanvas.width=this.displayCanvas.width,this.displayCanvas.height=this.displayCanvas.height,this.originCanvas.width=this.originCanvas.width,this.mainPreSlice&&(this.mainPreSlice.repaint.call(this.mainPreSlice),this.flipDisplayImageByAxis(),(t=this.displayCtx)==null||t.drawImage(this.originCanvas,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight),this.resizePaintArea(this.nrrd_states.sizeFoctor))}resizePaintArea(t){this.originCanvas.width=this.originCanvas.width,this.displayCanvas.width=this.displayCanvas.width,this.drawingCanvas.width=this.drawingCanvas.width,this.resetLayerCanvas(),this.nrrd_states.changedWidth=this.nrrd_states.originWidth*t,this.nrrd_states.changedHeight=this.nrrd_states.originHeight*t,this.displayCanvas.width=this.nrrd_states.changedWidth,this.displayCanvas.height=this.nrrd_states.changedHeight,this.drawingCanvas.width=this.nrrd_states.changedWidth,this.drawingCanvas.height=this.nrrd_states.changedHeight,this.drawingCanvasLayerMaster.width=this.nrrd_states.changedWidth,this.drawingCanvasLayerMaster.height=this.nrrd_states.changedHeight,this.drawingCanvasLayerOne.width=this.nrrd_states.changedWidth,this.drawingCanvasLayerOne.height=this.nrrd_states.changedHeight,this.drawingCanvasLayerTwo.width=this.nrrd_states.changedWidth,this.drawingCanvasLayerTwo.height=this.nrrd_states.changedHeight,this.drawingCanvasLayerThree.width=this.nrrd_states.changedWidth,this.drawingCanvasLayerThree.height=this.nrrd_states.changedHeight,this.redrawDisplayCanvas(),this.reloadMaskToLabel(this.paintImages,this.drawingLayerMasterCtx),this.reloadMaskToLabel(this.paintImagesLabel1,this.drawingLayerOneCtx),this.reloadMaskToLabel(this.paintImagesLabel2,this.drawingLayerTwoCtx),this.reloadMaskToLabel(this.paintImagesLabel3,this.drawingLayerTwoCtx)}reloadMaskToLabel(t,s){let e;switch(this.axis){case"x":t.x.length>0?e=this.filterDrawedImage("x",this.nrrd_states.currentIndex,t):e=void 0;break;case"y":t.y.length>0?e=this.filterDrawedImage("y",this.nrrd_states.currentIndex,t):e=void 0;break;case"z":t.z.length>0?e=this.filterDrawedImage("z",this.nrrd_states.currentIndex,t):e=void 0;break}e!=null&&e.image&&(this.setEmptyCanvasSize(),this.emptyCtx.putImageData(e.image,0,0),s==null||s.drawImage(this.emptyCanvas,0,0,this.nrrd_states.changedWidth,this.nrrd_states.changedHeight))}flipDisplayImageByAxis(){var t,s,e,a;this.axis==="x"?((t=this.displayCtx)==null||t.scale(-1,-1),(s=this.displayCtx)==null||s.translate(-this.nrrd_states.changedWidth,-this.nrrd_states.changedHeight)):this.axis==="z"&&((e=this.displayCtx)==null||e.scale(1,-1),(a=this.displayCtx)==null||a.translate(0,-this.nrrd_states.changedHeight))}filterDrawedImage(t,s,e){return e[t].filter(a=>a.index===s)[0]}removeGuiFolderChilden(t){const s=t.__controllers;s.length>0&&s.forEach(e=>{setTimeout(()=>{t.remove(e)},100)})}verifyCanvasIsEmpty(t){return this.emptyCanvas.width=t.width,this.emptyCanvas.height=t.height,t.toDataURL()===this.emptyCanvas.toDataURL()}clearDictionary(t){for(var s in t)delete t[s]}drawImageOnEmptyImage(t){this.emptyCtx.drawImage(t,0,0,this.emptyCanvas.width,this.emptyCanvas.height)}storeSphereImages(t,s){this.setEmptyCanvasSize(s),this.drawImageOnEmptyImage(this.drawingSphereCanvas);let e=this.emptyCtx.getImageData(0,0,this.emptyCanvas.width,this.emptyCanvas.height);this.storeImageToAxis(t,this.paintImages,e,s)}storeAllImages(t,s){!this.nrrd_states.loadMaskJson&&!this.gui_states.sphere&&(this.setEmptyCanvasSize(),this.drawImageOnEmptyImage(this.drawingCanvasLayerMaster));let e=this.emptyCtx.getImageData(0,0,this.emptyCanvas.width,this.emptyCanvas.height);switch(this.axis){case"x":const a=this.checkSharedPlaceSlice(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel,e),i=this.sliceArrayV(a,this.nrrd_states.nrrd_y_pixel,this.nrrd_states.nrrd_z_pixel),n=this.sliceArrayH(a,this.nrrd_states.nrrd_y_pixel,this.nrrd_states.nrrd_z_pixel),r=t;this.replaceVerticalColPixels(this.paintImages.z,this.nrrd_states.dimensions[2],1,i,this.nrrd_states.nrrd_x_pixel,r),this.replaceVerticalColPixels(this.paintImages.y,this.nrrd_states.dimensions[1],1,n,this.nrrd_states.nrrd_x_pixel,r);break;case"y":const h=this.checkSharedPlaceSlice(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel,e),o=this.sliceArrayV(h,this.nrrd_states.nrrd_z_pixel,this.nrrd_states.nrrd_x_pixel),_=this.sliceArrayH(h,this.nrrd_states.nrrd_z_pixel,this.nrrd_states.nrrd_x_pixel),w=t;this.replaceHorizontalRowPixels(this.paintImages.x,this.nrrd_states.dimensions[0],1,o,this.nrrd_states.nrrd_z_pixel,w),this.replaceHorizontalRowPixels(this.paintImages.z,this.nrrd_states.dimensions[2],1,_,this.nrrd_states.nrrd_x_pixel,w);break;case"z":const u=this.checkSharedPlaceSlice(this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel,e),m=this.sliceArrayV(u,this.nrrd_states.nrrd_y_pixel,this.nrrd_states.nrrd_x_pixel),y=this.sliceArrayH(u,this.nrrd_states.nrrd_y_pixel,this.nrrd_states.nrrd_x_pixel),d=t;this.replaceVerticalColPixels(this.paintImages.x,this.nrrd_states.dimensions[0],1,m,this.nrrd_states.nrrd_z_pixel,d),this.replaceHorizontalRowPixels(this.paintImages.y,this.nrrd_states.dimensions[1],1,y,this.nrrd_states.nrrd_x_pixel,d);break}this.storeImageToAxis(t,this.paintImages,e),!this.nrrd_states.loadMaskJson&&!this.gui_states.sphere&&this.storeEachLayerImage(t,s)}storeImageToAxis(t,s,e,a){var r,h,o;let i={index:t,image:e},n;switch(a||this.axis){case"x":n=this.filterDrawedImage("x",t,s),n?n.image=e:(r=s.x)==null||r.push(i);break;case"y":n=this.filterDrawedImage("y",t,s),n?n.image=e:(h=s.y)==null||h.push(i);break;case"z":n=this.filterDrawedImage("z",t,s),n?n.image=e:(o=s.z)==null||o.push(i);break}}storeImageToLabel(t,s,e){this.nrrd_states.loadMaskJson||(this.setEmptyCanvasSize(),this.drawImageOnEmptyImage(s));const a=this.emptyCtx.getImageData(0,0,this.emptyCanvas.width,this.emptyCanvas.height);return this.storeImageToAxis(t,e,a),a}storeEachLayerImage(t,s){this.nrrd_states.loadMaskJson||this.setEmptyCanvasSize();let e;switch(s){case"label1":e=this.storeImageToLabel(t,this.drawingCanvasLayerOne,this.paintImagesLabel1);break;case"label2":e=this.storeImageToLabel(t,this.drawingCanvasLayerTwo,this.paintImagesLabel2);break;case"label3":e=this.storeImageToLabel(t,this.drawingCanvasLayerThree,this.paintImagesLabel3);break}!this.nrrd_states.loadMaskJson&&this.axis=="z"&&this.nrrd_states.getMask(e,this.nrrd_states.currentIndex,s,this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel,this.nrrd_states.clearAllFlag)}sliceArrayH(t,s,e){const a=[];for(let i=0;i<s;i++){const n=i*e*4,r=(i+1)*e*4,h=t.slice(n,r);a.push(h)}return a}sliceArrayV(t,s,e){const a=[],i=e*4;for(let n=0;n<e;n++){const r=[];for(let h=0;h<s;h++){const o=i*h+n*4;r.push(t[o]),r.push(t[o+1]),r.push(t[o+2]),r.push(t[o+3])}a.push(r)}return a}replaceVerticalColPixels(t,s,e,a,i,n){for(let r=0,h=s;r<h;r++){const o=Math.floor(r*e),_=t[r].image.data,w=a[o],u=i*4;for(let m=0,y=w.length;m<y;m+=4){const d=m/4*u+n*4;_[d]=w[m],_[d+1]=w[m+1],_[d+2]=w[m+2],_[d+3]=w[m+3]}}}replaceHorizontalRowPixels(t,s,e,a,i,n){for(let r=0,h=s;r<h;r++){const o=Math.floor(r*e),_=t[r].image.data,w=a[o],u=i*n*4;for(let m=0,y=w.length;m<y;m++)_[u+m]=w[m]}}setEmptyCanvasSize(t){switch(t||this.axis){case"x":this.emptyCanvas.width=this.nrrd_states.nrrd_z_pixel,this.emptyCanvas.height=this.nrrd_states.nrrd_y_pixel;break;case"y":this.emptyCanvas.width=this.nrrd_states.nrrd_x_pixel,this.emptyCanvas.height=this.nrrd_states.nrrd_z_pixel;break;case"z":this.emptyCanvas.width=this.nrrd_states.nrrd_x_pixel,this.emptyCanvas.height=this.nrrd_states.nrrd_y_pixel;break}}setSphereCanvasSize(t){switch(t||this.axis){case"x":this.drawingSphereCanvas.width=this.nrrd_states.nrrd_z_mm,this.drawingSphereCanvas.height=this.nrrd_states.nrrd_y_mm;break;case"y":this.drawingSphereCanvas.width=this.nrrd_states.nrrd_x_mm,this.drawingSphereCanvas.height=this.nrrd_states.nrrd_z_mm;break;case"z":this.drawingSphereCanvas.width=this.nrrd_states.nrrd_x_mm,this.drawingSphereCanvas.height=this.nrrd_states.nrrd_y_mm;break}}checkSharedPlaceSlice(t,s,e){let a=this.emptyCtx.createImageData(t,s).data;if(this.nrrd_states.sharedPlace.z.includes(this.nrrd_states.currentIndex)){const i=this.findSliceInSharedPlace();if(i.push(e),i.length>0)for(let n=0;n<i.length;n++)this.replaceArray(a,i[n].data)}else a=e.data;return a}replaceArray(t,s){for(let e=0,a=s.length;e<a;e++)s[e]===0||t[e]!==0||(t[e]=s[e])}findSliceInSharedPlace(){const t=[],s=Math.floor(this.nrrd_states.currentIndex*this.nrrd_states.ratios[this.axis]);for(let e=1;e<=3;e++){const a=this.nrrd_states.currentIndex-e;if(a<this.nrrd_states.minIndex)break;Math.floor(a*this.nrrd_states.ratios[this.axis])===s&&t.push(this.paintImages[this.axis][a].image)}for(let e=1;e<=3;e++){const a=this.nrrd_states.currentIndex+e;if(a>this.nrrd_states.maxIndex)break;Math.floor(a*this.nrrd_states.ratios[this.axis])===s&&t.push(this.paintImages[this.axis][a].image)}return t}exportData(){window.alert("Export masks, starting!!!");const t=A(this.paintImages.z,this.nrrd_states.nrrd_z_pixel,this.nrrd_states.nrrd_x_pixel,this.nrrd_states.nrrd_y_pixel),s=E(t);s?(k(s,"copper3D_export data_z.json"),window.alert("Export masks successfully!!!")):window.alert("Export failed!")}configGui(t){t.__controllers.length>0&&this.removeGuiFolderChilden(t),t.open();const s=t.addFolder("DefaultActions");s.add(this.gui_states,"globalAlpha").name("Opacity").min(.1).max(1).step(.01),s.add(this.gui_states,"segmentation").name("Pencil").onChange(()=>{this.gui_states.segmentation?(this.drawingCanvas.removeEventListener("mouseover",this.drawingPrameters.handleOnDrawingBrushCricleMove),this.drawingCanvas.removeEventListener("mouseout",this.drawingPrameters.handleOnDrawingBrushCricleMove)):(this.drawingCanvas.addEventListener("mouseover",this.drawingPrameters.handleOnDrawingBrushCricleMove),this.drawingCanvas.addEventListener("mouseout",this.drawingPrameters.handleOnDrawingBrushCricleMove))}),s.add(this.gui_states,"sphere").name("Sphere").onChange(()=>{this.gui_states.sphere?(this.drawingCanvas.removeEventListener("wheel",this.drawingPrameters.handleZoomWheel),this.removeDragMode()):(this.drawingCanvas.addEventListener("wheel",this.drawingPrameters.handleZoomWheel),this.configDragMode(),this.clearPaint(),this.clearStoreImages())}),s.add(this.gui_states,"brushAndEraserSize").name("BrushAndEraserSize").min(5).max(50).step(1).onChange(()=>{this.gui_states.Eraser&&(this.eraserUrls.length>0?this.drawingCanvas.style.cursor=x(this.gui_states.brushAndEraserSize,this.eraserUrls):this.drawingCanvas.style.cursor=x(this.gui_states.brushAndEraserSize))}),s.add(this.gui_states,"Eraser").onChange(h=>{this.gui_states.Eraser=h,this.gui_states.Eraser?this.eraserUrls.length>0?this.drawingCanvas.style.cursor=x(this.gui_states.brushAndEraserSize,this.eraserUrls):this.drawingCanvas.style.cursor=x(this.gui_states.brushAndEraserSize):this.drawingCanvas.style.cursor=this.nrrd_states.defaultPaintCursor}),s.add(this.gui_states,"clear").name("Clear"),s.add(this.gui_states,"clearAll").name("ClearAll"),s.add(this.gui_states,"undo").name("Undo"),s.add(this.gui_states,"resetZoom").name("ResetZoom"),s.add(this.mainPreSlice.volume,"windowHigh",this.mainPreSlice.volume.min,this.mainPreSlice.volume.max,1).name("ImageContrast").onChange(h=>{this.nrrd_states.readyToUpdate=!1,this.updateSlicesContrast(h,"windowHigh")}).onFinishChange(()=>{this.repraintAllContrastSlices(),this.nrrd_states.readyToUpdate=!0});const e=t.addFolder("AdvanceSettings");e.add(this.gui_states,"label",["label1","label2","label3"]).name("Label").onChange(h=>{h==="label1"?(this.gui_states.fillColor="#00ff00",this.gui_states.brushColor="#00ff00"):h==="label2"?(this.gui_states.fillColor="#ff0000",this.gui_states.brushColor="#ff0000"):h==="label3"&&(this.gui_states.fillColor="#0000ff",this.gui_states.brushColor="#0000ff")}),e.add(this.gui_states,"cursor",["crosshair","pencil","dot"]).name("CursorIcons").onChange(h=>{this.nrrd_states.defaultPaintCursor=I(h,this.pencilUrls),this.drawingCanvas.style.cursor=this.nrrd_states.defaultPaintCursor}),e.add(this.gui_states,"mainAreaSize").name("Zoom").min(1).max(8).onFinishChange(h=>{this.resetPaintArea(),this.nrrd_states.sizeFoctor=h,this.resizePaintArea(h)}),e.add(this.gui_states,"dragSensitivity").name("DragSensitivity").min(1).max(this.nrrd_states.Max_sensitive).step(1);const a=e.addFolder("PencilSettings");a.add(this.gui_states,"lineWidth").name("OuterLineWidth").min(1.7).max(3).step(.01),a.addColor(this.gui_states,"color").name("Color"),a.addColor(this.gui_states,"fillColor").name("FillColor"),e.addFolder("BrushSettings").addColor(this.gui_states,"brushColor").name("BrushColor");const n=e.addFolder("MaskDownload");n.add(this.gui_states,"downloadCurrentMask").name("DownloadCurrentMask"),n.add(this.gui_states,"exportMarks").name("ExportMask");const r=e.addFolder("ContrastAdvanceSettings");r.add(this.mainPreSlice.volume,"lowerThreshold",this.mainPreSlice.volume.min,this.mainPreSlice.volume.max,1).name("LowerThreshold").onChange(h=>{this.nrrd_states.readyToUpdate=!1,this.updateSlicesContrast(h,"lowerThreshold")}).onFinishChange(()=>{this.repraintAllContrastSlices(),this.nrrd_states.readyToUpdate=!0}),r.add(this.mainPreSlice.volume,"upperThreshold",this.mainPreSlice.volume.min,this.mainPreSlice.volume.max,1).name("UpperThreshold").onChange(h=>{this.nrrd_states.readyToUpdate=!1,this.updateSlicesContrast(h,"upperThreshold")}).onFinishChange(()=>{this.repraintAllContrastSlices(),this.nrrd_states.readyToUpdate=!0}),r.add(this.mainPreSlice.volume,"windowLow",this.mainPreSlice.volume.min,this.mainPreSlice.volume.max,1).name("WindowLow").onChange(h=>{this.nrrd_states.readyToUpdate=!1,this.updateSlicesContrast(h,"windowLow")}).onFinishChange(()=>{this.repraintAllContrastSlices(),this.nrrd_states.readyToUpdate=!0}),s.open()}}export{W as n};
